class Solution {
private:
    bool dfs(int node, vector<int>adj[], int color[], int col) {
        color[node] = col;
        
        for( auto it: adj[node]) {
            if( color[it] == -1) {
                if( dfs(it, adj, color, !col) == false) {
                    return false;
                }
                
            }
            
            else if(color[it] == col) {
                    return false;
                }
        }
        
        return true;
    }
public:
	bool isBipartite(int V, vector<int>adj[]){
	    int color[V];
	    
	    for( int i=0; i<V; i++) {
	        color[i] = -1;
	    }
	    
	    for( int i=0; i<V; i++) {
	        if( color[i] == -1) {
	            if( dfs(i, adj, color, 0) == false) {
	                return false;
	            }
	        }
	    }
	    return true;
	}

};
